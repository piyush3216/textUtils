{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","msg","About","Fragment","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","_ref","setMyStyle","_useState","useState","_useState2","Object","slicedToArray","mode","setMode","react_router_dom","to","aria-label","aria-current","onClick","document","body","backgroundColor","title","color","border","value","Textform","text","setText","heading","onChange","event","target","rows","disabled","length","text1","toLocaleUpperCase","showAlert","toLowerCase","newText","split","join","navigator","clipboard","writeText","filter","element","textOverflow","overflow","defaultProps","aboutText","App","myStyle","_useState3","_useState4","setAlert","message","setTimeout","components_Alert","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.40da5c19.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style = {{height: \"50px\"}}>{\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","//import { isLabelWithInternallyDisabledControl } from '@testing-library/user-event/dist/utils'\r\nimport React from 'react'\r\nexport default function About(props) {\r\n    \r\n    return (\r\n        <> <div className=\"containaer\" style ={props.style}>\r\n            <h3>About Us</h3>\r\n                    <div className=\"accordion\" id=\"accordionExample\"style ={props.style}>\r\n                        <div className=\"accordion-item\"style ={props.style}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\"style ={props.style}>\r\n                            <button className=\"accordion-button\" style ={props.style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your text</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\"  className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style ={props.style}>\r\n                            <div className=\"accordion-body\">\r\n                            Textutils gives you a way to analyze your text quickly and efficiantly.Be it word couny,character count,convert to upercase and lowercase,copy your text.\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"accordion-item\" style ={props.style}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" style ={props.style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style ={props.style} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style ={props.style}>\r\n                            Textutils is free character counter tool that provides instant charactre count and wor cout statistics for giver text.Textutils report the number of words and character.Thus it is suitable for writing text with words/ character limit.\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"accordion-item\" style ={props.style}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" style ={props.style} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser comaptible</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" style ={props.style} className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                            This word counter works in any web browser such as Chrome,Firefox,Internet Explorer,Safari,Opera.It suits to count character in facebook,books,excel documents,pdf documents and essays etc.\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n        </div>    \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar({setMyStyle},props) {\r\n    const [mode,setMode] = useState(\"light\");\r\n    const darkMode = () =>{\r\n        document.body.style.backgroundColor = \"#0f274b\";\r\n        document.title = \"textUtils-Dark Mode\";\r\n        // props.showAlert(\"Spaces Cleared Successfully\",\"success\");\r\n          setMyStyle({\r\n            color: \"white\",\r\n            backgroundColor:\"#343a40\",\r\n            border: \"1px solid white\",\r\n          });\r\n          setMode(\"dark\");\r\n        }\r\n    const darkMode2 =() =>{\r\n        document.body.style.backgroundColor = \"white\";\r\n        document.title = \"textUtils-Light Mode\";\r\n        // props.showAlert(\"Spaces Cleared Successfully\",\"success\");\r\n        setMyStyle({\r\n              color: \"black\",\r\n              backgroundColor:\"white\"\r\n            });\r\n            setMode(\"light\");\r\n          }\r\n        \r\n    \r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\r\n                <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand\" to=\"/\"><b>textUtils</b></Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"form-check form-switch\">\r\n                        <button className=\"btn btn-dark mx-2\" onClick={darkMode} value = \"1\">DM</button>\r\n                <button className=\"btn btn-light mx-2\" onClick={darkMode2} value = \"0\">LM</button>\r\n</div>\r\n                </div>\r\n            </nav>`\r\n        </>\r\n    )\r\n}   \r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set your title here\",\r\n    aboutText: \"about\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    \r\n    const handleUpClick = () =>{\r\n        const text1 = text.toLocaleUpperCase();\r\n        setText(text1);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        const text1 = text.toLowerCase();\r\n        setText(text1);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearText = () =>{\r\n        const text1 = \"\";\r\n        setText(text1);\r\n        props.showAlert(\"Text Cleared Successfully\",\"success\");\r\n    }\r\n    const handleCopyText = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied Successfully\",\"success\");\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Spaces Cleared Successfully\",\"success\");\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    // var wordSize = text.split(' ').length;\r\n    // if(text === ''){\r\n    //     wordSize = 0;\r\n    // }else{\r\n    //     wordSize = text.split(' ').length;\r\n    // }\r\n    return (\r\n        <>     \r\n           \r\n            <div className='container' style={props.style}> \r\n                <div className=\"mb-3\">\r\n                    <h3>{props.heading}</h3>\r\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" style={props.style} onChange={handleOnChange} value = {text} rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearText}>Clear Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopyText}>Copy Text</button>\r\n                \r\n            </div>  \r\n            <div className=\"container\"style={props.style} >\r\n                    <h3>Your text Summary:</h3>\r\n                    <p>Your text contains {text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} Words and {text.length} Characters</p>\r\n                    <p >{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length  * 0.008} Minuts to read your text</p>\r\n                    <h3>Preview:</h3>\r\n                    <div style ={{textOverflow: 'ellipsis',overflow:'hidden'}}>\r\n                    <p >{text.length>0 ? text:\"Enter something in the textbox above to preview it here\"}</p>\r\n                    </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [myStyle,setMyStyle] = useState({\n    color : \"black\",\n    backgroundColor:\"white\"\n});\nconst [alert,setAlert] = useState(null);\nconst showAlert = (message, type) =>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() =>{\n        setAlert(null);\n      },1500)\n}\n  return (\n    <>\n    <Router>\n      <Navbar showAlert={showAlert} title=\"textUtils\" setMyStyle={setMyStyle} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      \n          <Switch>\n              <Route path=\"/about\">\n              <About style={myStyle}/>\n              </Route>\n              <Route path=\"/\">\n              <Textform showAlert={showAlert} heading = \"Enter the text to Analyze below\" style={myStyle}/>\n              </Route>\n          </Switch>\n       </div>\n       </Router>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}